apiVersion: v1
kind: ConfigMap
metadata:
  name: llm-observatory-config
  namespace: llm-observatory
  labels:
    app.kubernetes.io/name: llm-observatory
    app.kubernetes.io/component: config
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  ENABLE_QUANTUM_FEATURES: "true"
  ENABLE_NEUROMORPHIC_PROCESSING: "true"
  ENABLE_AI_OPTIMIZATION: "true"
  ENABLE_ADVANCED_SECURITY: "true"
  ENABLE_ENTERPRISE_FEATURES: "true"
  ENABLE_HYPERSCALE: "true"
  ENABLE_PREDICTIVE_ANALYTICS: "true"
  ENABLE_CROSS_SYSTEM_OPTIMIZATION: "true"
  PROMETHEUS_ENDPOINT: "http://prometheus:9090"
  GRAFANA_URL: "http://grafana:3000"
  LANGFUSE_HOST: "http://langfuse:3000"
  
  # Performance Configuration
  TARGET_LATENCY: "200"
  TARGET_THROUGHPUT: "10000"
  MAX_CONCURRENCY: "1000"
  CACHE_HIT_RATE_TARGET: "0.95"
  
  # Security Configuration
  THREAT_DETECTION_ENABLED: "true"
  THREAT_SCORE_THRESHOLD: "0.7"
  AUTO_BLOCK_THRESHOLD: "0.9"
  
  # Resilience Configuration
  FAILOVER_THRESHOLD: "3"
  RECOVERY_TIMEOUT: "300000"
  HEALTH_CHECK_INTERVAL: "30000"
  
  # AI Optimization Configuration
  ML_OPTIMIZATION_ENABLED: "true"
  LEARNING_RATE: "0.01"
  MEMORY_SIZE: "10000"
  MODEL_UPDATE_INTERVAL: "3600000"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: llm-observatory
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'llm-observatory'
        static_configs:
          - targets: ['llm-observatory:3000']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'langfuse'
        static_configs:
          - targets: ['langfuse:3000']
        metrics_path: '/api/metrics'
        scrape_interval: 30s
      
      - job_name: 'openlit'
        static_configs:
          - targets: ['openlit:3000']
        metrics_path: '/metrics'
        scrape_interval: 30s
      
      - job_name: 'otel-collector'
        static_configs:
          - targets: ['otel-collector:8888']
        metrics_path: '/metrics'
        scrape_interval: 15s
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - llm-observatory
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: llm-observatory
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: config
data:
  datasources.yml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        editable: true
        
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        editable: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: llm-observatory
  labels:
    app.kubernetes.io/name: otel-collector
    app.kubernetes.io/component: config
data:
  otel-collector-config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              scrape_interval: 10s
              static_configs:
                - targets: ['0.0.0.0:8888']

    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
      memory_limiter:
        limit_mib: 512

    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
      loki:
        endpoint: http://loki:3100/loki/api/v1/push
      logging:
        loglevel: info

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [logging]
        metrics:
          receivers: [otlp, prometheus]
          processors: [memory_limiter, batch]
          exporters: [prometheus, logging]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [loki, logging]