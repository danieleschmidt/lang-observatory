apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm-observatory
  namespace: llm-observatory
  labels:
    app.kubernetes.io/name: llm-observatory
    app.kubernetes.io/version: "3.0.0"
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: llm-observatory
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: llm-observatory
      app.kubernetes.io/component: application
  template:
    metadata:
      labels:
        app.kubernetes.io/name: llm-observatory
        app.kubernetes.io/component: application
        app.kubernetes.io/part-of: llm-observatory
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: llm-observatory
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: llm-observatory
        image: llm-observatory:3.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: llm-observatory-config
              key: NODE_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: llm-observatory-config
              key: LOG_LEVEL
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: llm-observatory-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: llm-observatory-secrets
              key: redis-url
        - name: LANGFUSE_PUBLIC_KEY
          valueFrom:
            secretKeyRef:
              name: llm-observatory-secrets
              key: langfuse-public-key
        - name: LANGFUSE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: llm-observatory-secrets
              key: langfuse-secret-key
        - name: ENABLE_QUANTUM_FEATURES
          valueFrom:
            configMapKeyRef:
              name: llm-observatory-config
              key: ENABLE_QUANTUM_FEATURES
        - name: ENABLE_NEUROMORPHIC_PROCESSING
          valueFrom:
            configMapKeyRef:
              name: llm-observatory-config
              key: ENABLE_NEUROMORPHIC_PROCESSING
        - name: ENABLE_AI_OPTIMIZATION
          valueFrom:
            configMapKeyRef:
              name: llm-observatory-config
              key: ENABLE_AI_OPTIMIZATION
        - name: ENABLE_ADVANCED_SECURITY
          valueFrom:
            configMapKeyRef:
              name: llm-observatory-config
              key: ENABLE_ADVANCED_SECURITY
        - name: ENABLE_ENTERPRISE_FEATURES
          valueFrom:
            configMapKeyRef:
              name: llm-observatory-config
              key: ENABLE_ENTERPRISE_FEATURES
        - name: ENABLE_HYPERSCALE
          valueFrom:
            configMapKeyRef:
              name: llm-observatory-config
              key: ENABLE_HYPERSCALE
        resources:
          limits:
            cpu: 2000m
            memory: 4Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /startup
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir:
          sizeLimit: 1Gi
      - name: logs
        emptyDir:
          sizeLimit: 500Mi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - llm-observatory
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "llm-observatory.io/dedicated"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"