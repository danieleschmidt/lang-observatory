apiVersion: v1
kind: Namespace
metadata:
  name: lang-observatory-production
  labels:
    name: lang-observatory-production
    environment: production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lang-observatory-api
  namespace: lang-observatory-production
  labels:
    app: lang-observatory-api
    environment: production
    version: v0.1.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: lang-observatory-api
  template:
    metadata:
      labels:
        app: lang-observatory-api
        environment: production
        version: v0.1.0
    spec:
      serviceAccountName: lang-observatory-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: api
          image: ghcr.io/terragon-labs/lang-observatory:v0.1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3000"
            - name: LANGFUSE_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: lang-observatory-secrets
                  key: langfuse-public-key
            - name: LANGFUSE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: lang-observatory-secrets
                  key: langfuse-secret-key
            - name: LANGFUSE_HOST
              valueFrom:
                configMapKeyRef:
                  name: lang-observatory-config
                  key: langfuse-host
            - name: OPENLIT_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: lang-observatory-config
                  key: openlit-endpoint
            - name: PROMETHEUS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: lang-observatory-config
                  key: prometheus-endpoint
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: lang-observatory-secrets
                  key: database-url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: lang-observatory-secrets
                  key: redis-url
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /api/health/startup
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - key: "app"
          operator: "Equal"
          value: "lang-observatory"
          effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: lang-observatory-api-service
  namespace: lang-observatory-production
  labels:
    app: lang-observatory-api
    environment: production
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: lang-observatory-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lang-observatory-ingress
  namespace: lang-observatory-production
  labels:
    app: lang-observatory
    environment: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
spec:
  tls:
    - hosts:
        - api.lang-observatory.com
      secretName: lang-observatory-tls
  rules:
    - host: api.lang-observatory.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lang-observatory-api-service
                port:
                  number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lang-observatory-config
  namespace: lang-observatory-production
  labels:
    app: lang-observatory
    environment: production
data:
  langfuse-host: "https://langfuse.example.com"
  openlit-endpoint: "https://openlit.example.com:4317"
  prometheus-endpoint: "http://prometheus.monitoring.svc.cluster.local:9090"
  log-level: "info"
  environment: "production"
  features.global-scaling: "true"
  features.neuromorphic-processing: "true"
  features.quantum-optimization: "true"
  features.compliance-automation: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: lang-observatory-secrets
  namespace: lang-observatory-production
  labels:
    app: lang-observatory
    environment: production
type: Opaque
stringData:
  # These should be replaced with actual values in production
  langfuse-public-key: "pk-lf-placeholder"
  langfuse-secret-key: "sk-lf-placeholder"
  database-url: "postgresql://username:password@postgres:5432/langobservatory"
  redis-url: "redis://redis:6379/0"
  encryption-key: "your-32-character-encryption-key-here"
  jwt-secret: "your-jwt-secret-key-here"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: lang-observatory-service-account
  namespace: lang-observatory-production
  labels:
    app: lang-observatory
    environment: production
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: lang-observatory-role
  namespace: lang-observatory-production
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: lang-observatory-role-binding
  namespace: lang-observatory-production
subjects:
  - kind: ServiceAccount
    name: lang-observatory-service-account
    namespace: lang-observatory-production
roleRef:
  kind: Role
  name: lang-observatory-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: lang-observatory-hpa
  namespace: lang-observatory-production
  labels:
    app: lang-observatory
    environment: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: lang-observatory-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
      selectPolicy: Min
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: lang-observatory-pdb
  namespace: lang-observatory-production
  labels:
    app: lang-observatory
    environment: production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: lang-observatory-api
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: lang-observatory-network-policy
  namespace: lang-observatory-production
  labels:
    app: lang-observatory
    environment: production
spec:
  podSelector:
    matchLabels:
      app: lang-observatory-api
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 3000
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 9090
    - to:
        - namespaceSelector:
            matchLabels:
              name: database
      ports:
        - protocol: TCP
          port: 5432
    - to:
        - namespaceSelector:
            matchLabels:
              name: cache
      ports:
        - protocol: TCP
          port: 6379
    - to: []
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80
        - protocol: UDP
          port: 53
