[tool:pytest]
minversion = 7.0
testpaths = tests/python
python_files = test_*.py *_test.py
python_functions = test_*
python_classes = Test* *Tests
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:coverage/python
    --cov-report=xml:coverage/python-coverage.xml
    --cov-report=json:coverage/python-coverage.json
    --cov-fail-under=80
    --cov-branch
    --junit-xml=test-results/pytest-junit.xml
    --maxfail=10
    --durations=10
    -ra
markers =
    unit: Unit tests that don't require external dependencies
    integration: Integration tests that require running services
    e2e: End-to-end tests that test the full system
    performance: Performance and load tests
    slow: Tests that take a long time to run
    security: Security-related tests
    contract: Contract tests for API compatibility
    smoke: Smoke tests for basic functionality
    regression: Regression tests for known issues
    llm: Tests specifically for LLM functionality
    observability: Tests for observability and monitoring features
    kubernetes: Tests that require Kubernetes environment
    docker: Tests that require Docker environment
    network: Tests that require network access
    database: Tests that require database access
    mock: Tests that use mocking extensively
    parametrize: Parametrized tests with multiple test cases
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
log_file = logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(pathname)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S
timeout = 300
timeout_method = thread