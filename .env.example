# Lang Observatory Environment Configuration
# Copy this file to .env and configure the values for your environment

# =============================================================================
# Core Configuration
# =============================================================================

# Environment (development, staging, production)
NODE_ENV=development

# Release version
VERSION=0.1.0

# =============================================================================
# Langfuse Configuration
# =============================================================================

# Langfuse API configuration
LANGFUSE_PUBLIC_KEY=pk-lf-your-public-key-here
LANGFUSE_SECRET_KEY=sk-lf-your-secret-key-here
LANGFUSE_HOST=http://localhost:3000

# Database configuration for Langfuse
LANGFUSE_DATABASE_URL=postgresql://langfuse:password@localhost:5432/langfuse

# Authentication
LANGFUSE_NEXTAUTH_SECRET=your-nextauth-secret-here
LANGFUSE_NEXTAUTH_URL=http://localhost:3000
LANGFUSE_SALT=your-random-salt-here
LANGFUSE_ENCRYPTION_KEY=your-32-character-encryption-key-here

# =============================================================================
# OpenLIT Configuration
# =============================================================================

# OpenTelemetry collector endpoint
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
OTEL_EXPORTER_OTLP_HEADERS="api-key=your-api-key"

# OpenLIT specific configuration
OPENLIT_API_KEY=your-openlit-api-key
OPENLIT_ENVIRONMENT=development

# =============================================================================
# Prometheus Configuration
# =============================================================================

# Prometheus server configuration
PROMETHEUS_URL=http://localhost:9090
PROMETHEUS_RETENTION_TIME=15d
PROMETHEUS_SCRAPE_INTERVAL=30s
PROMETHEUS_STORAGE_TSDB_PATH=/prometheus/data

# =============================================================================
# Grafana Configuration
# =============================================================================

# Grafana admin credentials
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=your-secure-password-here

# Grafana configuration
GRAFANA_URL=http://localhost:8080
GRAFANA_ORG_NAME=Lang Observatory
GRAFANA_DATABASE_TYPE=sqlite3
GRAFANA_DATABASE_PATH=/var/lib/grafana/grafana.db

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL configuration
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=langfuse
POSTGRES_USER=langfuse
POSTGRES_PASSWORD=your-secure-password-here

# Database connection pool
DB_POOL_MIN=2
DB_POOL_MAX=10

# =============================================================================
# Security Configuration
# =============================================================================

# JWT configuration
JWT_SECRET=your-jwt-secret-key-here
JWT_EXPIRES_IN=7d

# CORS configuration
CORS_ORIGIN=http://localhost:3000,http://localhost:8080

# API rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# Monitoring & Observability
# =============================================================================

# Health check configuration
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=5s

# Logging configuration
LOG_LEVEL=info
LOG_FORMAT=json

# Metrics configuration
METRICS_ENABLED=true
METRICS_PORT=9464

# =============================================================================
# Kubernetes Configuration (for Helm deployments)
# =============================================================================

# Namespace
K8S_NAMESPACE=lang-observatory
KUBECONFIG=~/.kube/config

# Resource limits
MEMORY_LIMIT=512Mi
CPU_LIMIT=500m
MEMORY_REQUEST=256Mi
CPU_REQUEST=100m

# Storage configuration
STORAGE_CLASS=standard
STORAGE_SIZE=10Gi

# =============================================================================
# Helm Configuration
# =============================================================================

HELM_CHART_VERSION=0.1.0
HELM_RELEASE_NAME=lang-observatory
HELM_VALUES_FILE=values.yaml

# =============================================================================
# Development Configuration
# =============================================================================

# Development mode settings
DEBUG=true
DEV_MODE=true
HOT_RELOAD=true

# Local testing configuration
TEST_DATABASE_URL=postgresql://test:test@localhost:5433/langfuse_test
TEST_TIMEOUT=30000

# =============================================================================
# CI/CD Configuration
# =============================================================================

GITHUB_TOKEN=your-github-token
REGISTRY_URL=ghcr.io
REGISTRY_USERNAME=your-username
REGISTRY_PASSWORD=your-registry-token

# =============================================================================
# External Integrations
# =============================================================================

# Slack notifications (optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Email notifications (optional)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@example.com
SMTP_PASS=your-app-password
EMAIL_FROM=noreply@your-domain.com

# =============================================================================
# Feature Flags
# =============================================================================

# Enable/disable features
FEATURE_COST_TRACKING=true
FEATURE_ADVANCED_ANALYTICS=true
FEATURE_EXPORT_DATA=true
FEATURE_WEBHOOK_INTEGRATIONS=true